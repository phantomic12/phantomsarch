name: Update Repo
on:
  push:
    paths-ignore:      
          - "iso/**"
          - ".github/**"
  workflow_dispatch:

jobs:
  genmatrix:
    runs-on: ubuntu-latest

    outputs:
      build_matrix: ${{ steps.generate_build_matrix.outputs.build_matrix }}
      is_empty: ${{ steps.generate_build_matrix.outputs.is_empty }}

    # check out the repo
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - run: git fetch
      #- run: git checkout HEAD^

      - name: Generate Build matrix
        id: generate_build_matrix
        # generate build matrix by checking out changes in repo/
        run: |
          # get the list of changed folders in the current commit
          changed_folders=$(git diff --name-only HEAD^ | grep -oP 'repo\/(.+)\/' | sort -u )
          echo "Changed folders: $changed_folders"
          # if changed_folders is empty then set is empty to true
          if [ -z "$changed_folders" ]; then
            echo "::set-output name=is_empty::true"
          else
            echo "::set-output name=is_empty::false"
          fi
          # turn it into a json array
          #build_matrix=$(echo "$changed_folders" | jq -R . | jq -s . | jq -c .)
          # if there's only one folder then check if it's
          build_matrix=$(find repo/ | grep -oP 'repo\/(.+)\/' | sort -u | jq -R -s -c 'split("\n")[:-1]')
          # create build matrix with { changed_folders: [ "folder1", "folder2" ] }
          echo "::set-output name=build_matrix::$build_matrix"
          #echo "::set-output name=build_matrix::$build_matrix"

  build:
    needs: genmatrix
    strategy:
      matrix:
        pkg: ${{ fromJson(needs.genmatrix.outputs.build_matrix) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Arch Linux package
        uses: soloturn/build-aur-action@master
        with:
          repo-name: ${{ matrix.pkg }}

      - name: Move files
        run: cd ${{ matrix.pkg }} && mkdir phn-repo && mv *.tar.zst

    #  - name: Upload Built Artifacts
     #   uses: actions/upload-artifact@v3
     #   with:
     #     path: /phn-repo
  
 # upload:
  #  needs: build
  #  runs-on: ubuntu-latest
  #  container:
    #  image: archlinux:base-devel
  #    options: --privileged
  #  steps:
   #   - name: Download Artifacts
   #     uses: actions/download-artifact@v3
    #    with:
     #     path: phn-repo

    #  - name: Install Prerequisites
    #    run: sudo pacman -Sy openssh --noconfirm
      

   #   - name: Setup SSH
    #    uses: fastai/workflows/ssh@master
  #      with:
       #     ssh_key: ${{ secrets.SSH_KEY }}
         #   key_file: id_ecdsa
      
 #     - name: Repo add everything
 #       run: cd phn-repo && repo-add 'phn-repo.db.tar.gz' *.tar.zst && cd ..

#      - name: Upload it all
#        run: |
#          ssh-keyscan frs.sourceforge.net >> ~/.ssh/known_hosts
#          sshpass -p "${{ secrets.PASSWORD }}" rsync -arsP -e ssh / "${{ secrets.USERNAME }}@frs.sourceforge.net:$/home/pfs/project/phn-repo/new"
      